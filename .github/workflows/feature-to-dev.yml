# .github/workflows/feature-to-dev.yml
name: Feature Branch CI & Auto-Merge to Dev

on:
  push:
    branches:
      - 'feature/*'

jobs:
  build-test-and-merge:
    name: Build, Test, and Merge to Dev
    runs-on: ubuntu-latest

    # Grant permissions for the workflow to create and merge pull requests
    permissions:
      contents: write
      pull-requests: write

    steps:
      # Step 1 â€” Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2 â€” Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Step 3 â€” Create .env file for backend tests ðŸ”‘
      - name: Create .env file for backend
        run: |
          echo "Creating .env file in /server..."
          cd server
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "âœ… .env file created for testing."
        # These secrets should be configured in your repo's Settings > Secrets and variables > Actions
        
      # Step 4 â€” Install dependencies & Run Tests (Backend & Frontend)
      - name: Install and Test Backend
        run: |
          cd server
          npm install
          npm test --if-present
      - name: Install, Build, and Test Frontend
        run: |
          cd client
          npm install
          npm run build # A build can catch errors even if you don't have tests
          # npm test --if-present # Uncomment if you have frontend tests

      # Step 5 - Get current branch name
      - name: Get Branch Name
        id: get_branch
        run: echo "branch_name=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
      
      # Step 6 - Create and Merge Pull Request using GitHub CLI
      - name: Create and Merge PR to dev
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Creating and merging PR for ${{ steps.get_branch.outputs.branch_name }} into dev..."
          gh pr create \
            --base dev \
            --head ${{ steps.get_branch.outputs.branch_name }} \
            --title "Auto-Merge: ${{ steps.get_branch.outputs.branch_name }}" \
            --body "âœ… Tests passed. Automatically merging into dev branch."
          
          gh pr merge ${{ steps.get_branch.outputs.branch_name }} \
            --merge \
            --delete-branch \
            --admin
          echo "âœ… PR merged and feature branch deleted."
